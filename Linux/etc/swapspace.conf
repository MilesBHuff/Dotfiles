#!/hint/conf
## Copyright (C) by Miles Bradley Huff from 2024 per the LGPL3 (the Third Lesser GNU Public License)

################################################################################
## P A T H S

## Where Swapspace should place swapfiles.
## This directory should have 700 permissions -- swap, like memory, can contain sensitive data!
## If btrfs, this directory should be its own subvolume. This subvolume should have CoW disabled, and it should not be snapshotted.
# Default="/var/lib/swapspace"
swappath="/var/swap"

################################################################################
## P E R C E N T A G E S
## Using values that work well on powers of two can make setting sizes simpler.

## If the amount of memory remaining is lower than this value, allocate more swap.
# Default=20
lower_freelimit=25
## By the time you get to 20%, the kernel is likely ready to page some things out but is probably not yet in a state of serious memory pressure.  Accordingly, 20 is a reasonable value.  I would not recommend going lower than 10.
## Consider the total amount of RAM in your system when setting this.  If it is low (like 4G) and you are using it as a PC, you may want to consider setting this quite high (like 50 or more), because modern applications can easily eat 1G of RAM faster than Swapspace can allocate it.

## This is the amount of remaining memory that Swapspace will try to keep you at.
# Default=30
freetarget=50
## This should be somewhere between `lower_freelimit` and `upper_freelimit`.
## If desiring to stay near the default, consider a simpler ratio like 1/3 (33) instead of 3/10 (30).

## If the amount of memory remaining is higher than this value, deallocate the largest swapfile.
# Default=60
upper_freelimit=75
## There is something to be said for disabling deallocation by setting this to 100. Deallocation floods memory with data that is likely not currently needed. Without deallocation, the kernel will automatically move this swap back into memory as-needed.
## If disabling deallocations, make sure to wipe these swapfiles on startup, before Swapspace starts.
## A compromise, which gets you deallocation without restarting but which also avoids flooding memory with irrelevancies when you are still using your memory, is to set upper_freelimit to a very high value (like 80) to allow the system to chew through old swap when memory is not being used.

################################################################################
## S I Z E S
## Must be integers.
## Valid units are "m" (MiB), "g" (GiB), and "t" (TiB).

## Min swapfile size.
# Default=4m
min_swapsize=1g
## Highest sensible value is probably `freetarget` minus `lower_freelimit` times total RAM.
## You should probably use some fraction of that, though, to give a little more flexibility early-on.
## This should probably not be set lower than 1g on a PC, given how memory-hungry many modern applications are.

## Max swapfile size.
# Default=2t
max_swapsize=8g
## Highest sensible value is `upper_freelimit` minus `lower_freelimit` times total RAM.
## This is so that max-size swapfiles can be cleared-out without putting the system past lower_freelimit (which would result in a contradictory state).
## Keep in-mind that this value limits the maximum amount of swap that Swapspace can allocate, because the Linux kernel can only support up to 32 swap files at one time.

################################################################################
## T I M E S
## All values are in seconds.

## How long Swapspace should wait between certain actions.
## * After allocating more swap, swap will not be deallocated until this time has elapsed.
## * After failing to allocate swap due to lack of storage space, swap will not be allocated again until this time has elapsed.
# Default=600
cooldown=600
