#!/usr/bin/env

## Source acquisition
## -----------------------------------------------------------------------------
## The download utilities that makepkg should use to acquire sources
## Format: 'protocol::agent'
DLAGENTS=('file::/usr/bin/curl -gqC - -o %o %u'
          'ftp::/usr/bin/curl -gqfC - --ftp-pasv --retry 3 --retry-delay 3 -o %o %u'
          'http::/usr/bin/curl -gqb "" -fLC - --retry 3 --retry-delay 3 -o %o %u'
          'https::/usr/bin/curl -gqb "" -fLC - --retry 3 --retry-delay 3 -o %o %u'
          'rsync::/usr/bin/rsync --no-motd -z %u %o'
          'scp::/usr/bin/scp -C %u %o')
#DLAGENTS=('ftp::/usr/bin/aria2 --conf-path=/etc/aria2.conf -UWget -s4 %u -o %o'
#          'http::/usr/bin/aria2 --conf-path=/etc/aria2.conf -UWget -s4 %u -o %o'
#          'https::/usr/bin/wget'
#          'rsync::/usr/bin/rsync --no-motd -z %u %o'
#          'scp::/usr/bin/scp -C %u %o')
## Other common tools:
#          '::/usr/bin/snarf'
#          '::/usr/bin/lftpget -c'
#          '::/usr/bin/wget'

## The package required by makepkg to download VCS sources
## Format: 'protocol::package'
VCSCLIENTS=('bzr::bzr'
            'git::git'
            'hg::mercurial'
            'svn::subversion')

## Achitecture and flags
## -----------------------------------------------------------------------------
CARCH="x86_64"
CHOST="x86_64-pc-linux-gnu"
## CFLAGS
_CUSTOM_CFLAGS='-pipe -march=native -mtune=native -O2'
_UBUNTU_CFLAGS='-fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security'
_ARCH_CFLAGS='-fno-plt' #-march=x86-64 -mtune=generic -O2 -pipe
CFLAGS="$_CUSTOM_CFLAGS $_UBUNTU_CFLAGS $_ARCH_CFLAGS"
CXXFLAGS="$CFLAGS"
#CPPFLAGS=""
## Debug flags
_CUSTOM_DEBUG_CFLAGS='-pipe -march=native -mtune=native -Og -pedantic-errors -Wall'
_UBUNTU_DEBUG_CFLAGS=''
_ARCH_DEBUG_CFLAGS='-g -fvar-tracking-assignments'
DEBUG_CFLAGS="$_CUSTOM_DEBUG_CFLAGS $_UBUNTU_DEBUG_CFLAGS $_ARCH_DEBUG_CFLAGS"
DEBUG_CXXFLAGS="$DEBUG_CFLAGS"
## LDFLAGS
_CUSTOM_LDFLAGS='-Wl,-O2'
_UBUNTU_LDFLAGS='--as-needed,--hash-style=gnu,--no-copy-dt-needed-entries,-z,relro'
_ARCH_LDFLAGS='--sort-common,-z,now' #-Wl,-O2,--as-needed,-z,relro
LDFLAGS="$_CUSTOM_LDFLAGS,$_UBUNTU_LDFLAGS,$_ARCH_LDFLAGS"
## Makeflags
MAKEFLAGS="-e -j $(nproc) -O line" ## Change this for DistCC/SMP systems

## Build environment
## -----------------------------------------------------------------------------
## Defaults: BUILDENV=(!distcc color !ccache check !sign)
## A negated environment option will do the opposite of the comments below.
##
## distcc:   Use the Distributed C/C++/ObjC compiler
## color:    Colorize output messages
## ccache:   Use ccache to cache compilation
## check:    Run the check() function if present in the PKGBUILD
## sign:     Generate PGP signature file
BUILDENV=(fakeroot !distcc color !ccache check !sign)
## If using DistCC, your MAKEFLAGS will also need modification. In addition,
## specify a space-delimited list of hosts running in the DistCC cluster.
#DISTCC_HOSTS=""
## Specify a directory for package building.
BUILDDIR=/tmp/makepkg

## Global package options
## -----------------------------------------------------------------------------
## These are default values for the options=() settings
## Default: OPTIONS=(strip docs !libtool !staticlibs emptydirs zipman purge !optipng !upx !debug)
## A negated option will do the opposite of the comments below.
## strip:      Strip symbols from binaries/libraries
## docs:       Save doc directories specified by DOC_DIRS
## libtool:    Leave libtool (.la) files in packages
## staticlibs: Leave static library (.a) files in packages
## emptydirs:  Leave empty directories in packages
## zipman:     Compress manual (man and info) pages in MAN_DIRS with gzip
## purge:      Remove files specified by PURGE_TARGETS
## upx:        Compress binary executable files using UPX
## optipng:    Optimize PNG images with optipng
## debug:      Add debugging flags as specified in DEBUG_* variables
OPTIONS=(strip docs !libtool !staticlibs emptydirs zipman purge !optipng !upx !debug)
## File integrity checks to use. Valid: md5, sha1, sha256, sha384, sha512
INTEGRITY_CHECK=(md5)
## Options to be used when stripping binaries. See `man strip' for details.
STRIP_BINARIES="--strip-all"
## Options to be used when stripping shared libraries. See `man strip' for details.
STRIP_SHARED="--strip-unneeded"
## Options to be used when stripping static libraries. See `man strip' for details.
STRIP_STATIC="--strip-debug"
## Manual (man and info) directories to compress (if zipman is specified)
MAN_DIRS=({usr{,/local}{,/share},opt/*}/{man,info})
## Doc directories to remove (if !docs is specified)
DOC_DIRS=(usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc})
## Files to be removed from all packages (if purge is specified)
PURGE_TARGETS=(usr/{,share}/info/dir .packlist *.pod)
## Directory to store source code in for debug packages
DBGSRCDIR="/usr/src/debug"

## PACKAGE OUTPUT
## -----------------------------------------------------------------------------
## Default: put built package and cached source in build directory
## Destination: specify a fixed directory where all packages will be placed
#PKGDEST=/home/packages
## Source cache: specify a fixed directory where source files will be cached
#SRCDEST=/home/sources
## Source packages: specify a fixed directory where all src packages will be placed
#SRCPKGDEST=/home/srcpackages
## Log files: specify a fixed directory where all log files will be placed
#LOGDEST=/home/makepkglogs
## Packager: name/email of the person or organization building packages
#PACKAGER="John Doe <john@doe.com>"
## Specify a key to use for package signing
#GPGKEY=""

## COMPRESSION DEFAULTS
## -----------------------------------------------------------------------------
COMPRESSGZ=(gzip -c -f -n)
COMPRESSBZ2=(bzip2 -c -f)
COMPRESSXZ=(xz -c -z --threads=$(nproc) -)
COMPRESSLRZ=(lrzip -q)
COMPRESSLZO=(lzop -q)
COMPRESSZ=(compress -c -f)

## EXTENSION DEFAULTS
## -----------------------------------------------------------------------------
## WARNING: Do NOT modify these variables unless you know what you are doing.
PKGEXT='.pkg.tar.xz'
SRCEXT='.src.tar.gz'
